---
- block:
  - name: custom CA cert directory
    file: dest=/usr/local/share/ca-certificates state=directory

  - name: (possibly self-signed) ssl cert
    template: src=openstack.crt
              dest=/usr/local/share/ca-certificates/{{ endpoints.main }}.crt
    notify: refresh CAs

  - name: Install any additional CA certificates
    copy:
      content: "{{ item.content | default(omit) }}"
      dest: "/usr/local/share/ca-certificates/{{ item.name }}.crt"
      src: "{{ item.src | default(omit) }}"
    with_items: "{{ ssl.extracacerts | default([]) }}"
    notify: refresh CAs
  when: ansible_os_family == 'Debian'

- block:
  - name: custom CA cert directory
    file: dest=/etc/pki/ca-trust/source/anchors state=directory

  - name: (possibly self-signed) ssl ca cert
    template: src=openstack.cacrt
              dest=/etc/pki/ca-trust/source/anchors/{{ endpoints.main }}.pem
    notify: refresh rhel CAs
    when: ssl.cacrt|default(None)

  - name: Install any additional CA certificates
    copy:
      content: "{{ item.content | default(omit) }}"
      dest: "/etc/pki/ca-trust/source/anchors/{{ item.name }}.pem"
      src: "{{ item.src | default(omit) }}"
    with_items: "{{ ssl.extracacerts | default([]) }}"
    notify: refresh rhel CAs
  when: ansible_os_family == 'RedHat'


- name: ssl directory
  file: dest=/opt/stack/ssl state=directory

- name: install openstack SSL cert
  template:
    src: openstack.crt
    dest: /opt/stack/ssl/openstack.crt
    mode: 0644
  tags:
    - cert

- block:
  - name: pip install httplib2
    pip: name=httplib2 version=0.8
    register: result
    until: result|succeeded
    retries: 5
    when: (ansible_os_family == 'Debian') or (ansible_os_family == 'RedHat' and openstack_install_method == 'source')

  - name: pip install requests
    pip: name=requests version=2.11.1
    register: result
    until: result|succeeded
    retries: 5
  when: (ansible_os_family == 'RedHat' and openstack_install_method != 'distro') or
        (ansible_os_family == 'Debian' and ansible_distribution_version == "12.04")

# ugly hack: some python http libs don't honor the system ca-certs, and ship with
# their own list, instead.
# pre-install these client libs, and force them to use the system cert list.
- name: force our ssl cert for python libs on precise
  file: src=/etc/ssl/certs/ca-certificates.crt dest={{ item }} owner=root
        mode=0644 state=link force=yes
  with_items:
    - /usr/share/pyshared/httplib2/cacerts.txt
    - /usr/local/lib/python2.7/dist-packages/httplib2/cacerts.txt
    - /usr/local/lib/python2.7/dist-packages/requests/cacert.pem
  when: ansible_os_family == 'Debian' and ansible_distribution_version == "12.04"

- name: force our ssl cert for python libs on precise
  file: src=/etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt dest={{ item }} owner=root
        mode=0644 state=link force=yes
  with_items:
    - /usr/lib/python2.7/site-packages/httplib2/cacerts.txt
    - /usr/lib/python2.7/site-packages/requests/cacert.pem
  when: ansible_os_family == 'RedHat'

- name: httplib2 and request Python modules that already use system CA certs
  package: name={{ item }}
  with_items:
    - python-httplib2
    - python-requests
  when: ansible_os_family == 'Debian' and ansible_distribution_version == "14.04"
  register: result
  until: result|succeeded
  retries: 5

- meta: flush_handlers

- name: update ca certificates
  command: update-ca-certificates
  when: ansible_os_family == 'Debian'
